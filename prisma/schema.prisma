// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

model User {
  id             String     @id @default(cuid())
  nama           String
  email          String     @unique
  emailVerified  DateTime?
  username       String
  hashedPassword String
  role           Role       @default(User)
  image          String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  berita         Berita[]
  kegiatan       Kegiatan[]
  Unggulan       Unggulan[]
}

model Anggota {
  id         String        @id @default(cuid())
  nama       String
  jabatan    Jabatan
  pendidikan Pendidikan
  bidang     String?
  keahlian   String
  email      String        @unique
  instagram  String?
  telephone  String?
  image      String?
  about      String
  status     StatusAnggota @default(Aktif)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  afiliasi   Afiliasi @relation(fields: [afiliasiId], references: [id])
  afiliasiId String
}

model Afiliasi {
  id        String     @id @default(cuid())
  nama      String
  singkatan String
  deskripsi String
  warna     String
  logo      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  anggota   Anggota[]
  kegiatan  Kegiatan[]
  Unggulan  Unggulan[]
}

model Berita {
  id      Int        @id @default(autoincrement())
  judul   String
  keyword String
  konten  String
  tanggal DateTime   @default(now())
  status  StatusBlog @default(pending)

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  kategori  Kategori[]
}

model Kategori {
  id     Int      @id @default(autoincrement())
  nama   String   @unique
  berita Berita[]
}

model Kegiatan {
  id      Int      @id @default(autoincrement())
  judul   String
  keyword String
  konten  String
  tanggal DateTime @default(now())

  subUnit    Afiliasi @relation(fields: [afiliasiId], references: [id])
  afiliasiId String

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Unggulan {
  id      Int      @id @default(autoincrement())
  judul   String
  keyword String
  konten  String
  tanggal DateTime @default(now())

  subUnit    Afiliasi @relation(fields: [afiliasiId], references: [id])
  afiliasiId String

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model karyaTulisan {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Galleri {
  id        Int      @id @default(autoincrement())
  image     String
  title     String?
  deskripsi String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Konfigurasi {
  id                  String  @id @default(cuid())
  keyword             String
  metadata            String
  namaOrganisasi      String
  singkatanOrganisasi String
  motto               String
  motto2              String?
  deskripsiOrganisasi String
  deskripsiWeb        String
  URLWebsite          String
  emailOrganisasi     String
  telOrganisasi       String
  alamatOrganisasi    String
  facebook            String?
  instagram           String?
  linkedIn            String?
  URLfacebook         String?
  URLinstagram        String?
  URLlinkedIn         String?
}

enum Role {
  User
  Admin
}

enum StatusBlog {
  pending
  publish
}

enum Jabatan {
  Ketua
  Anggota
}

enum StatusAnggota {
  Aktif
  TidakAktif
}

enum Pendidikan {
  SD
  SMP
  SMA
  D3
  S1
}
